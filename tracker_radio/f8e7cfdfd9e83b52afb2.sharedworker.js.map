{"version":3,"sources":["webpack:///webpack/bootstrap f8e7cfdfd9e83b52afb2","webpack:///./src/wetracker/src/audio/timerworker.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","self","addEventListener","e","port","ports","timerID","interval","event","data","setInterval","postMessage","clearInterval","start"],"mappings":"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,KAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,IAGAzB,IAAA0B,EAAA,8CC7DAC,KAAKC,iBAAiB,UAAW,SAACC,GAChC,IAAMC,EAAOD,EAAEE,MAAM,GACjBC,EAAU,KACVC,EAAW,IAEfH,EAAKF,iBAAiB,UAAW,SAACM,GACb,UAAfA,EAAMC,MACRH,EAAUI,YAAY,WACpBN,EAAKO,YAAY,SAChBJ,GACHH,EAAKO,YAAY,YACRH,EAAMC,KAAKF,UACpBA,EAAWC,EAAMC,KAAKF,SAClBD,IACFM,cAAcN,GACdA,EAAUI,YAAY,WACpBN,EAAKO,YAAY,SAChBJ,IAELH,EAAKO,YAAY,qBACO,SAAfH,EAAMC,OACfG,cAAcN,GACdA,EAAU,KACVF,EAAKO,YAAY,cAIrBP,EAAKS,QAELT,EAAKO,YAAY","file":"f8e7cfdfd9e83b52afb2.sharedworker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"8DD8\");\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f8e7cfdfd9e83b52afb2","self.addEventListener('connect', (e) => {\n  const port = e.ports[0];\n  let timerID = null;\n  let interval = 100;\n\n  port.addEventListener('message', (event) => {\n    if (event.data === 'start') {\n      timerID = setInterval(() => {\n        port.postMessage('tick');\n      }, interval);\n      port.postMessage('Started');\n    } else if (event.data.interval) {\n      interval = event.data.interval;\n      if (timerID) {\n        clearInterval(timerID);\n        timerID = setInterval(() => {\n          port.postMessage('tick');\n        }, interval);\n      }\n      port.postMessage('Interval updated');\n    } else if (event.data === 'stop') {\n      clearInterval(timerID);\n      timerID = null;\n      port.postMessage('Stopped');\n    }\n  });\n\n  port.start();\n\n  port.postMessage('Timer initialised');\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/wetracker/src/audio/timerworker.js"],"sourceRoot":""}